import 'package:fl_chart/fl_chart.dart';
import 'package:flutter/material.dart';
import 'package:gap/gap.dart';

class VulnerabilityCountDistribution extends StatefulWidget {
  const VulnerabilityCountDistribution({super.key});

  @override
  _VulnerabilityCountDistributionState createState() =>
      _VulnerabilityCountDistributionState();
}

class _VulnerabilityCountDistributionState
    extends State<VulnerabilityCountDistribution> {
  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        const Center(
          child: Text(
            'Vulnerability Count Distribution',
            style: TextStyle(fontWeight: FontWeight.bold, fontSize: 24),
          ),
        ),
        Gap(30),
        Expanded(
          child: BarChart(
            BarChartData(
              alignment: BarChartAlignment.spaceAround,
              maxY: 5, // Define the maximum value for the Y-axis
              barTouchData: BarTouchData(enabled: true),
              titlesData: FlTitlesData(
                show: true,
                bottomTitles: AxisTitles(
                  axisNameWidget: const Text(
                    'Vulnerability Count Range', // X-axis label
                    style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
                  ),
                  axisNameSize: 30, // Spacing for the axis label
                  sideTitles: SideTitles(
                    showTitles: true,
                    getTitlesWidget: (double value, TitleMeta meta) {
                      const style = TextStyle(
                        color: Colors.black,
                        fontWeight: FontWeight.bold,
                        fontSize: 14,
                      );
                      // Ensure value is within the valid range of titles
                      if (value < 0 || value > 2) {
                        return Container();
                      }

                      switch (value.toInt()) {
                        case 0:
                          return Text('0', style: style);
                        case 1:
                          return Text('1-50', style: style);
                        case 2:
                          return Text('51-100', style: style);
                        default:
                          return Container();
                      }
                    },
                  ),
                ),
                leftTitles: AxisTitles(
                  axisNameWidget: const Text(
                    'Number of Files', // Y-axis label
                    style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
                  ),
                  axisNameSize: 30, // Spacing for the axis label
                  sideTitles: SideTitles(
                    showTitles: true,
                    getTitlesWidget: (double value, TitleMeta meta) {
                      return Text('${value.toInt()}');
                    },
                  ),
                ),
              ),
              borderData: FlBorderData(show: false),
              barGroups: _createVulnerabilityBarGroups(),
            ),
          ),
        ),
      ],
    );
  }

  // Method to generate bar groups for vulnerability distribution
  List<BarChartGroupData> _createVulnerabilityBarGroups() {
    return [
      BarChartGroupData(x: 0, barRods: [
        BarChartRodData(toY: 2, color: Colors.orange, width: 40), // Range: 0
      ]),
      BarChartGroupData(x: 1, barRods: [
        BarChartRodData(toY: 4, color: Colors.orange, width: 40), // Range: 1-50
      ]),
      BarChartGroupData(x: 2, barRods: [
        BarChartRodData(
            toY: 1, color: Colors.orange, width: 40), // Range: 51-100
      ]),
    ];
  }
}
